generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
        
model Users {
  id                  Int                @id @default(autoincrement())
  supabaseUserId      String             @unique
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  userName            String             @unique
  profileIcon         String
  biography           String             @db.Text
  cafes               Cafe[]
  favorites           Favorite[]             
}

enum WifiSpeed {
  HIGH    
  MEDIUM
  LOW
}

enum WifiStability {
  VERY_STABLE
  STABLE
  UNSTABLE
}

enum SeatAvailability {
  AVAILABLE
  CROWDED
  FULL
}

model Cafe {
  id                     Int               @id @default(autoincrement())
  createdAt              DateTime          @default(now())
  updatedAt              DateTime          @updatedAt
  cafeName               String            @db.VarChar(100)
  thumbnailImage         String            @db.VarChar(255) 
  area                   String
  storeAddress           String  
  openingTime            String            @db.VarChar(20)
  closingHours           String            @db.VarChar(20)
  closingDays            String
  cafeUrl                String            @db.VarChar(255)
  menuOrdered            String
  wifiAvailable          Boolean
  wifiSpeed              WifiSpeed?
  wifiStability          WifiStability?
  powerOutlets           Boolean
  seatAvailability       SeatAvailability?
  starRating             Int               
  comment                String
  locationCoordinates    String
  userId                 Int
  favorites              Favorite[]
  users                  Users             @relation(fields: [userId], references: [id])
}

model Favorite {
  id                     Int               @id @default(autoincrement())           
  createdAt              DateTime          @default(now())
  updatedAt              DateTime          @updatedAt
  userId                 Int
  cafeId                 Int
  user                   Users             @relation(fields: [userId], references: [id])
  cafe                   Cafe              @relation(fields: [cafeId], references: [id])
}